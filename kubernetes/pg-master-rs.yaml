kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: pg-data-CLUSER_NAME_TO_REPLACE-DISK_INDEX
  annotations:
    volume.beta.kubernetes.io/storage-class: postgresv1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
---
apiVersion: extensions/v1beta1
kind: ReplicaSet
metadata:
  name: postgres-CLUSER_NAME_TO_REPLACE-DISK_INDEX
spec:
  # Always 1 replica, we have a different RC per PG instance
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
        role: master
        cluster: CLUSER_NAME_TO_REPLACE
        master: "true"
        index: "DISK_INDEX"
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: postgres
        image: thirtyx/postgres:0.0.2-dev
        env:
          - name: POSTGRES_PASSWORD
            value: password
          - name: PGDATA
            value: /pgdata/data
          - name: PGMOUNT
            value: /pgdata
          - name: MEMBER_ROLE
            value: master
          - name: SYNCHONROUS_REPLICAS
            value: "SLAVE_NAMES"
        ports:
          - containerPort: 5432
        volumeMounts:
        - mountPath: /pgdata
          name:  pg-data-CLUSER_NAME_TO_REPLACE-DISK_INDEX
        imagePullPolicy: Always
      volumes:
      - name: pg-data-CLUSER_NAME_TO_REPLACE-DISK_INDEX
        persistentVolumeClaim:
          claimName: pg-data-CLUSER_NAME_TO_REPLACE-DISK_INDEX


  # selector:
  #   matchLabels:
  #       app: postgres
  #       role: master
  #       cluster: CLUSER_NAME_TO_REPLACE
  #       MOUNT_ID: MOUNT_ID
